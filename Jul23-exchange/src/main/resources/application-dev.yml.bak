# spring配置
spring:
  redis:
    host: localhost
    port: 6379
    password:
    #1.JDBC数据源
  datasource:
    username: root
    password: 5.6.7.8abc
    url: jdbc:mysql://127.0.0.1:3306/ry-config?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #2.连接池配置
    druid:
      #初始化连接池的连接数量 大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      #配置获取连接等待超时的时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM sys_dept
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
      #3.基础监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        #设置监控页面的登录名和密码
        login-username: admin
        login-password: admin
        allow: 127.0.0.1
        #deny: 192.168.1.100


## seata配置
#seata:
#  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启
#  enabled: false
#  # Seata 应用编号，默认为 ${spring.application.name}
#  application-id: ${spring.application.name}
#  # Seata 事务组编号，用于 TC 集群名
#  tx-service-group: ${spring.application.name}-group
#  # 关闭自动代理
#  enable-auto-data-source-proxy: false
#  # 服务配置项
#  service:
#    # 虚拟组和分组的映射
#    vgroup-mapping:
#      ruoyi-system-group: default
#  config:
#    type: nacos
#    nacos:
#      serverAddr: 127.0.0.1:8848
#      group: SEATA_GROUP
#      namespace:
#  registry:
#    type: nacos
#    nacos:
#      application: seata-server
#      server-addr: 127.0.0.1:8848
#      namespace:

mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: del_flag # 字段
      logic-delete-value: 1 # 逻辑删除
      logic-not-delete-value: 0 # 逻辑未删除
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名
  type-aliases-package: com.jul17.backend.entity.*
  # 该配置请和 typeAliasesPackage 一起使用，如果配置了该属性，则仅仅会扫描路径下以该类作为父类的域对象 。
  type-aliases-super-type: java.lang.Object
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    # 配置的缓存的全局开关
    cache-enabled: true
    # 延时加载的开关
    lazy-loading-enabled: true
    # 开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    multiple-result-sets-enabled: true
    use-generated-keys: true
    default-statement-timeout: 60
    default-fetch-size: 100
## swagger配置
#swagger:
#  title: 系统模块接口文档
#  license: Powered By ruoyi
#  licenseUrl: https://ruoyi.vip